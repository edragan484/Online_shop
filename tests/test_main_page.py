import time
import pytest

from pages.all_products_page import AllProductsPage
from pages.change_password_page import ChangePasswordPage
from pages.delete_profile_page import DeleteProfilePage
from pages.main_page import MainPage
from pages.login_page import LoginPage
from pages.account_page import AccountPage
from pages.basket_page import BasketPage
from pages.checkout_page import CheckoutPage
from pages.product2_page import Product2Page
from pages.shipping_address_page import ShippingAddressPage
from pages.enter_payment_details_page import EnterPaymentDetailsPage
from pages.preview_order_page import PreviewOrderPage
from pages.order_confirmation_page import OrderConfirmationPage
from pages.account_profile_edit_page import AccountProfileEditPage


@pytest.mark.regress
class TestMainPageForGuest:
    product_name1 = "The City and the Stars"
    product_name2 = "Google Hacking"
    menu_deutsch = "Im Webshop st√∂bern"
    basket_deutsch = "Warenkorb anzeigen"

    def test_verify_site_name(self, browser):
        page = MainPage(browser)
        page.open()
        page.verify_site_name()
        page.verify_site_subname()

    def test_verify_guest_see_login_link(self, browser):
        page = MainPage(browser)
        page.open()
        page.verify_login_link()

    def test_guest_can_go_to_login_page(self, browser):
        page = MainPage(browser)
        page.open()
        page.go_to_login_page()
        login_page = LoginPage(browser)
        login_page.check_login_page()

    def test_check_change_languages(self, browser):
        page = MainPage(browser)
        page.open()
        page.change_language_to_it()
        page.verify_menu_and_basket_text_in_it()
        page.change_language_to_deutsch()
        page.verify_menu_and_basket_text_in_deutsch()
        page.verify_another_method_deutsch(TestMainPageForGuest.menu_deutsch, TestMainPageForGuest.basket_deutsch)

    def test_verify_search_item(self, browser):
        page = MainPage(browser)
        page.open()
        page.searching_item(TestMainPageForGuest.product_name2)
        page.verify_search_items_is_correct(TestMainPageForGuest.product_name2)
        page.verify_image_found_item_is_correct(TestMainPageForGuest.product_name2)

    def test_verify_welcome_block(self, browser):
        page = MainPage(browser)
        page.open()
        page.verify_welcome_block()

    def test_verify_recommended_reading_block(self, browser):
        page = MainPage(browser)
        page.open()
        page.verify_recommended_reading_block()

    def test_verify_other_books_block(self, browser):
        page = MainPage(browser)
        page.open()
        page.verify_other_good_books_block()

    def test_click_product_link(self, browser):
        page = MainPage(browser)
        page.open()
        page.go_to_product_page_from_product_name_link()

    def test_click_product_image_link(self, browser):
        page = MainPage(browser)
        page.open()
        page.go_to_product_page_from_product_name_image()

    def test_add_item_to_basket(self, browser):
        page = MainPage(browser)
        page.open()
        page.add_to_basket_from_main_page()

    def test_verify_alerts_of_add_item_to_basket(self, browser):
        page = MainPage(browser)
        page.open()
        page.add_to_basket_from_main_page()
        page.verify_alert_of_add_item_to_basket()
        page.verify_alert_of_offer()
        page.verify_alert_basket_total()

    def test_verify_basket_and_checkout_buttons_in_alert(self, browser):
        page = MainPage(browser)
        page.open()
        page.add_to_basket_from_main_page()
        page.verify_alert_basket_total()
        page.verify_view_basket_button_in_alert()
        page.verify_checkout_in_alert()

    def test_go_to_basket_from_add_item_alert(self, browser):
        page = MainPage(browser)
        page.open()
        page.add_to_basket_from_main_page()
        page.verify_alert_basket_total()
        page.go_to_basket_from_alert()

    def test_go_to_checkout_from_add_item_alert(self, browser):
        page = MainPage(browser)
        page.open()
        page.add_to_basket_from_main_page()
        page.verify_alert_basket_total()
        page.go_to_checkout_from_alert()

    def test_verify_page_constructor(self, browser):
        page = MainPage(browser)
        page.open()
        page.verify_menu_block()
        page.verify_welcome_block()
        page.verify_other_good_books_block()
        page.verify_recommended_reading_block()

    def test_verify_menu_links(self, browser):
        page = MainPage(browser)
        page.open()
        page.verify_all_products_button_menu()
        page.verify_clothing_button_menu()
        page.verify_books_button_menu()
        page.verify_offers_button_menu()

    def test_verify_add_item_to_basket(self, browser):
        page = MainPage(browser)
        page.open()
        page.add_to_basket_from_main_page()
        page.verify_alert_of_add_item_to_basket()
        page.verify_alert_of_offer()
        page.verify_alert_basket_total()
        page.verify_view_basket_button_in_alert()
        page.verify_checkout_in_alert()

    def test_register_user_on_site(self, browser):
        page = MainPage(browser)
        page.open()
        page.go_to_login_page()
        login_page = LoginPage(browser)
        login_page.open()
        login_page.register_user_on_main_page()

    def test_user_in_system(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()


@pytest.mark.e2e
class TestMainPageForGuest2:
    #product_name1 = "The City and the Stars"
    #product_name2 = "Hacking Work"

    # buy book, from main page, fill all fields in shipping
    def test_buy_product_from_main_page(self, browser):
        page = MainPage(browser)
        page.open()
        page.add_to_basket_from_main_page()
        page.press_basket_button()
        basket_page = BasketPage(browser)
        basket_page.open()
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.verify_price_of_item()
        basket_page.verify_shipping_free()
        basket_page.verify_price_the_city_and_the_stars()
        basket_page.press_proceed_to_checkout_button()
        checkout_page = CheckoutPage(browser)
        checkout_page.open()
        checkout_page.fill_email_in_checkout_guest()
        checkout_page.new_customer_button_checked()
        checkout_page.fill_password_guest()
        checkout_page.button_continue()
        shipping_address_page = ShippingAddressPage(browser)
        shipping_address_page.open()
        shipping_address_page.fill_all_fields_in_shipping_form()
        shipping_address_page.press_continue_button()
        enter_payment_details_page = EnterPaymentDetailsPage(browser)
        enter_payment_details_page.open()
        enter_payment_details_page.verify_name_page()
        enter_payment_details_page.press_button_continue()
        preview_order_page = PreviewOrderPage(browser)
        preview_order_page.open()
        preview_order_page.verify_name_page()
        preview_order_page.verify_address_review()
        preview_order_page.verify_payment_review()
        preview_order_page.verify_basket_items_review()
        preview_order_page.press_place_order_button()
        order_confirmation_page = OrderConfirmationPage(browser)
        order_confirmation_page.open()
        order_confirmation_page.verify_name_page()
        order_confirmation_page.verify_address_review()
        order_confirmation_page.verify_basket_items_review()
        order_confirmation_page.verify_button_print_page()
        order_confirmation_page.verify_continue_shopping()

    # buy book, from main page, fill just required fields in shipping
    def test_buy_product_from_main_page_2(self, browser):
        page = MainPage(browser)
        page.open()
        page.add_to_basket_from_main_page()
        page.press_basket_button()
        basket_page = BasketPage(browser)
        basket_page.open()
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.verify_price_of_item()
        basket_page.verify_shipping_free()
        basket_page.verify_price_the_city_and_the_stars()
        basket_page.press_proceed_to_checkout_button()
        checkout_page = CheckoutPage(browser)
        checkout_page.open()
        checkout_page.fill_email_in_checkout_guest()
        checkout_page.new_customer_button_checked()
        checkout_page.fill_password_guest()
        checkout_page.button_continue()
        shipping_address_page = ShippingAddressPage(browser)
        shipping_address_page.open()
        shipping_address_page.fill_required_fields_in_shipping_form()
        shipping_address_page.press_continue_button()
        enter_payment_details_page = EnterPaymentDetailsPage(browser)
        enter_payment_details_page.open()
        enter_payment_details_page.verify_name_page()
        enter_payment_details_page.press_button_continue()
        preview_order_page = PreviewOrderPage(browser)
        preview_order_page.open()
        preview_order_page.verify_name_page()
        preview_order_page.verify_address_review()
        preview_order_page.verify_payment_review()
        preview_order_page.verify_basket_items_review()
        preview_order_page.press_place_order_button()
        order_confirmation_page = OrderConfirmationPage(browser)
        order_confirmation_page.open()
        order_confirmation_page.verify_name_page()
        order_confirmation_page.verify_address_review()
        order_confirmation_page.verify_basket_items_review()
        order_confirmation_page.verify_button_print_page()
        order_confirmation_page.verify_continue_shopping()

# buy book from all products page, press basket, fill all fields in shipping form
    def test_guest_buy_product(self, browser):
        page = MainPage(browser)
        page.open()
        all_products_page = AllProductsPage(browser)
        all_products_page.open()
        all_products_page.add_to_basket_button()
        all_products_page.verify_alert1_of_add_to_basket()
        all_products_page.verify_alert2_of_add_to_basket()
        all_products_page.verify_alert3_of_add_to_basket()
        all_products_page.press_view_basket_from_alert()
        basket_page = BasketPage(browser)
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.verify_price_of_item()
        basket_page.press_proceed_to_checkout_button()
        checkout_page = CheckoutPage(browser)
        checkout_page.fill_email_in_checkout_guest()
        checkout_page.new_customer_button_checked()
        checkout_page.fill_password_guest()
        checkout_page.button_continue()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_all_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    #  buy book from all products page, press basket, fill required fields in shipping form
    def test_guest_buy_product2(self, browser):
        page = MainPage(browser)
        page.open()
        all_products_page = AllProductsPage(browser)
        all_products_page.open()
        all_products_page.add_to_basket_button()
        all_products_page.verify_alert1_of_add_to_basket()
        all_products_page.verify_alert2_of_add_to_basket()
        all_products_page.verify_alert3_of_add_to_basket()
        all_products_page.press_view_basket_from_alert()
        basket_page = BasketPage(browser)
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.verify_price_of_item()
        basket_page.press_proceed_to_checkout_button()
        checkout_page = CheckoutPage(browser)
        checkout_page.fill_email_in_checkout_guest()
        checkout_page.new_customer_button_checked()
        checkout_page.fill_password_guest()
        checkout_page.button_continue()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_required_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    # buy book from all products page, press checkout, fill required fields in shipping form
    def test_guest_buy_product3(self, browser):
        page = MainPage(browser)
        page.open()
        all_products_page = AllProductsPage(browser)
        all_products_page.open()
        all_products_page.add_to_basket_button()
        all_products_page.verify_alert1_of_add_to_basket()
        all_products_page.verify_alert2_of_add_to_basket()
        all_products_page.verify_alert3_of_add_to_basket()
        all_products_page.press_checkout_from_alert()
        checkout_page = CheckoutPage(browser)
        checkout_page.fill_email_in_checkout_guest()
        checkout_page.new_customer_button_checked()
        checkout_page.fill_password_guest()
        checkout_page.button_continue()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_required_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    # buy book from all products page, press checkout, fill all fields in shipping form
    def test_guest_buy_product4(self, browser):
        page = MainPage(browser)
        page.open()
        all_products_page = AllProductsPage(browser)
        all_products_page.open()
        all_products_page.add_to_basket_button()
        all_products_page.verify_alert1_of_add_to_basket()
        all_products_page.verify_alert2_of_add_to_basket()
        all_products_page.verify_alert3_of_add_to_basket()
        all_products_page.press_checkout_from_alert()
        checkout_page = CheckoutPage(browser)
        checkout_page.fill_email_in_checkout_guest()
        checkout_page.new_customer_button_checked()
        checkout_page.fill_password_guest()
        checkout_page.button_continue()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_all_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    # return to basket
    def test_guest_buy_product5(self, browser):
        page = MainPage(browser)
        page.open()
        all_products_page = AllProductsPage(browser)
        all_products_page.open()
        all_products_page.add_to_basket_button()
        all_products_page.verify_alert1_of_add_to_basket()
        all_products_page.verify_alert2_of_add_to_basket()
        all_products_page.verify_alert3_of_add_to_basket()
        all_products_page.press_checkout_from_alert()
        checkout_page = CheckoutPage(browser)
        checkout_page.fill_email_in_checkout_guest()
        checkout_page.new_customer_button_checked()
        checkout_page.fill_password_guest()
        checkout_page.button_continue()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.press_return_to_basket()

    # using basket button
    def test_guest_buy_product6(self, browser):
        page = MainPage(browser)
        page.open()
        all_products_page = AllProductsPage(browser)
        all_products_page.open()
        all_products_page.add_to_basket_button()
        basket_page = BasketPage(browser)
        basket_page.open()
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.verify_shipping_free()
        basket_page.press_proceed_to_checkout_button()
        checkout_page = CheckoutPage(browser)
        checkout_page.fill_email_in_checkout_guest()
        checkout_page.new_customer_button_checked()
        checkout_page.fill_password_guest()
        checkout_page.button_continue()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_all_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    # using product page
    def test_guest_buy_product7(self, browser):
        page = MainPage(browser)
        page.open()
        all_products_page = AllProductsPage(browser)
        all_products_page.open()
        all_products_page.press_item_link()
        product_page = Product2Page(browser)
        product_page.verify_name_page()
        product_page.verify_product_image()
        product_page.verify_review_button()
        product_page.add_to_basket()
        product_page.verify_alert_of_add_product()
        product_page.press_basket_button()
        basket_page = BasketPage(browser)
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.verify_price_of_item()
        basket_page.press_proceed_to_checkout_button()
        checkout_page = CheckoutPage(browser)
        checkout_page.fill_email_in_checkout_guest()
        checkout_page.new_customer_button_checked()
        checkout_page.fill_password_guest()
        checkout_page.button_continue()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_all_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()


@pytest.mark.regress
class TestMainPageForRegisteredUser:
    product_name1 = "The City and the Stars"
    product_name2 = "Google Hacking"
    menu_deutsch = "Im Webshop st√∂bern"
    basket_deutsch = "Warenkorb anzeigen"

    def test_verify_site_name(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.verify_site_name()
        page.verify_site_subname()

    def test_verify_account_icon_link(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.verify_account_icon_link()

    def test_check_change_languages(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.change_language_to_it()
        page.verify_menu_and_basket_text_in_it()
        page.change_language_to_deutsch()
        page.verify_menu_and_basket_text_in_deutsch()
        page.verify_another_method_deutsch(TestMainPageForRegisteredUser.menu_deutsch,
                                           TestMainPageForRegisteredUser.basket_deutsch)

    def test_verify_search_item(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.searching_item(TestMainPageForRegisteredUser.product_name2)
        page.verify_search_items_is_correct(TestMainPageForRegisteredUser.product_name2)
        page.verify_image_found_item_is_correct(TestMainPageForRegisteredUser.product_name2)

    def test_verify_welcome_block(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.verify_welcome_block()

    def test_verify_recommended_reading_block(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.verify_recommended_reading_block()

    def test_verify_other_books_block(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.verify_other_good_books_block()

    def test_click_product_link(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_product_page_from_product_name_link()

    def test_click_product_image_link(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_product_page_from_product_name_image()

    def test_add_item_to_basket(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.add_to_basket_from_main_page()

    def test_verify_alerts_of_add_item_to_basket(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.add_to_basket_from_main_page()
        page.verify_alert_of_add_item_to_basket()
        page.verify_alert_of_offer()
        page.verify_alert_basket_total()

    def test_verify_basket_and_checkout_buttons_in_alert(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.add_to_basket_from_main_page()
        page.verify_alert_basket_total()
        page.verify_view_basket_button_in_alert()
        page.verify_checkout_in_alert()

    def test_go_to_basket_from_add_item_alert(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.add_to_basket_from_main_page()
        page.verify_alert_basket_total()
        page.go_to_basket_from_alert()

    def test_go_to_checkout_from_add_item_alert(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.add_to_basket_from_main_page()
        page.verify_alert_basket_total()
        page.go_to_checkout_from_alert()

    def test_verify_page_structure(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.verify_menu_block()
        page.verify_welcome_block()
        page.verify_other_good_books_block()
        page.verify_recommended_reading_block()

    def test_verify_menu_links(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.verify_all_products_button_menu()
        page.verify_clothing_button_menu()
        page.verify_books_button_menu()
        page.verify_offers_button_menu()

    def test_verify_add_item_to_basket(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.add_to_basket_from_main_page()
        page.verify_alert_of_add_item_to_basket()
        page.verify_alert_of_offer()
        page.verify_alert_basket_total()
        page.verify_view_basket_button_in_alert()
        page.verify_checkout_in_alert()


@pytest.mark.e2e
class TestMainPageForRegisteredUser2:
    product_item1 = "Google Hacking"

    # buy book, from main page, fill all fields in shipping
    def test_buy_product_from_main_page(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.add_to_basket_from_main_page()
        page.press_basket_button()
        basket_page = BasketPage(browser)
        basket_page.open()
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.verify_shipping_free()
        basket_page.press_proceed_to_checkout_button()
        shipping_address_page = ShippingAddressPage(browser)
        shipping_address_page.open()
        shipping_address_page.fill_all_fields_in_shipping_form()
        shipping_address_page.press_continue_button()
        enter_payment_details_page = EnterPaymentDetailsPage(browser)
        enter_payment_details_page.open()
        enter_payment_details_page.verify_name_page()
        enter_payment_details_page.press_button_continue()
        preview_order_page = PreviewOrderPage(browser)
        preview_order_page.open()
        preview_order_page.verify_name_page()
        preview_order_page.verify_address_review()
        preview_order_page.verify_payment_review()
        preview_order_page.verify_basket_items_review()
        preview_order_page.press_place_order_button()
        order_confirmation_page = OrderConfirmationPage(browser)
        order_confirmation_page.open()
        order_confirmation_page.verify_name_page()
        order_confirmation_page.verify_address_review()
        order_confirmation_page.verify_basket_items_review()
        order_confirmation_page.verify_button_print_page()
        order_confirmation_page.verify_continue_shopping()

    # buy book, from main page, fill just required fields in shipping
    def test_buy_product_from_main_page_2(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.browser.execute_script("window.scrollBy(0, 200);")
        page.add_to_basket_from_main_page()
        page.press_basket_button()
        basket_page = BasketPage(browser)
        basket_page.open()
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        page.browser.execute_script("window.scrollBy(0, 500);")
        basket_page.verify_shipping_free()
        basket_page.press_proceed_to_checkout_button()
        shipping_address_page = ShippingAddressPage(browser)
        shipping_address_page.open()
        shipping_address_page.fill_required_fields_in_shipping_form()
        shipping_address_page.press_continue_button()
        enter_payment_details_page = EnterPaymentDetailsPage(browser)
        enter_payment_details_page.open()
        enter_payment_details_page.verify_name_page()
        enter_payment_details_page.press_button_continue()
        preview_order_page = PreviewOrderPage(browser)
        preview_order_page.open()
        preview_order_page.verify_name_page()
        preview_order_page.verify_address_review()
        preview_order_page.verify_payment_review()
        preview_order_page.verify_basket_items_review()
        preview_order_page.press_place_order_button()
        order_confirmation_page = OrderConfirmationPage(browser)
        order_confirmation_page.open()
        order_confirmation_page.verify_name_page()
        order_confirmation_page.verify_address_review()
        order_confirmation_page.verify_basket_items_review()
        order_confirmation_page.verify_button_print_page()
        order_confirmation_page.verify_continue_shopping()

# buy book from all products page, fill all fields in shipping form, basket
    def test_guest_buy_product(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_all_products_button_menu()
        all_products_page = AllProductsPage(browser)
        all_products_page.add_to_basket_button()
        all_products_page.verify_alert1_of_add_to_basket()
        all_products_page.verify_alert2_of_add_to_basket()
        all_products_page.verify_alert3_of_add_to_basket()
        all_products_page.press_view_basket_from_alert()
        basket_page = BasketPage(browser)
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.press_proceed_to_checkout_button()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_required_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    #  buy book from all products page, fill required fields in shipping form, basket
    def test_guest_buy_product2(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_all_products_button_menu()
        all_products_page = AllProductsPage(browser)
        all_products_page.add_to_basket_button()
        all_products_page.verify_alert1_of_add_to_basket()
        all_products_page.verify_alert2_of_add_to_basket()
        all_products_page.verify_alert3_of_add_to_basket()
        all_products_page.press_view_basket_from_alert()
        basket_page = BasketPage(browser)
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.press_proceed_to_checkout_button()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_required_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    # buy book from all products page, press shipping, fill all fields in shipping form
    def test_guest_buy_product3(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_all_products_button_menu()
        all_products_page = AllProductsPage(browser)
        all_products_page.add_to_basket_button()
        all_products_page.verify_alert1_of_add_to_basket()
        all_products_page.verify_alert2_of_add_to_basket()
        all_products_page.verify_alert3_of_add_to_basket()
        all_products_page.press_checkout_from_alert()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_required_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    # buy book from all products page, press shipping, fill required fields in shipping form
    def test_guest_buy_product4(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_all_products_button_menu()
        all_products_page = AllProductsPage(browser)
        all_products_page.add_to_basket_button()
        all_products_page.verify_alert1_of_add_to_basket()
        all_products_page.verify_alert2_of_add_to_basket()
        all_products_page.verify_alert3_of_add_to_basket()
        all_products_page.press_checkout_from_alert()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_required_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    # buy book from all products page, press shipping, choose old address
    def test_guest_buy_product5(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_all_products_button_menu()
        all_products_page = AllProductsPage(browser)
        all_products_page.add_to_basket_button()
        all_products_page.verify_alert1_of_add_to_basket()
        all_products_page.verify_alert2_of_add_to_basket()
        all_products_page.verify_alert3_of_add_to_basket()
        all_products_page.press_checkout_from_alert()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.press_button_ship_to_this_address()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    # return to basket
    def test_guest_buy_product6(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_all_products_button_menu()
        all_products_page = AllProductsPage(browser)
        all_products_page.add_to_basket_button()
        all_products_page.verify_alert1_of_add_to_basket()
        all_products_page.verify_alert2_of_add_to_basket()
        all_products_page.verify_alert3_of_add_to_basket()
        all_products_page.press_checkout_from_alert()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.press_return_to_basket()
        basket_page = BasketPage(browser)
        basket_page.open()

    # using basket button
    def test_guest_buy_product7(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_all_products_button_menu()
        all_products_page = AllProductsPage(browser)
        all_products_page.add_to_basket_button()
        basket_page = BasketPage(browser)
        basket_page.open()
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.browser.execute_script("window.scrollBy(0, 200);")
        basket_page.verify_shipping_free()
        basket_page.press_proceed_to_checkout_button()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_all_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    # using basket button and old address
    def test_guest_buy_product8(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_all_products_button_menu()
        all_products_page = AllProductsPage(browser)
        all_products_page.add_to_basket_button()
        basket_page = BasketPage(browser)
        basket_page.open()
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.browser.execute_script("window.scrollBy(0, 200);")
        basket_page.verify_shipping_free()
        basket_page.press_proceed_to_checkout_button()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.press_button_ship_to_this_address()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()

    # using product page
    def test_guest_buy_product9(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_all_products_button_menu()
        all_products_page = AllProductsPage(browser)
        all_products_page.press_item_link()
        product_page = Product2Page(browser)
        product_page.verify_name_page()
        product_page.verify_product_image()
        product_page.verify_review_button()
        product_page.add_to_basket()
        product_page.verify_alert_of_add_product()
        product_page.press_basket_button()
        basket_page = BasketPage(browser)
        basket_page.verify_page_name()
        basket_page.verify_items_in_basket()
        basket_page.verify_price_of_item()
        basket_page.press_proceed_to_checkout_button()
        shipping_page = ShippingAddressPage(browser)
        shipping_page.fill_all_fields_in_shipping_form()
        shipping_page.press_continue_button()
        payment_page = EnterPaymentDetailsPage(browser)
        payment_page.press_button_continue()
        preview_page = PreviewOrderPage(browser)
        preview_page.verify_address_review()
        preview_page.verify_payment_review()
        preview_page.verify_basket_items_review()
        preview_page.press_place_order_button()
        confirmation_page = OrderConfirmationPage(browser)
        confirmation_page.verify_name_page()
        confirmation_page.verify_address_review()
        confirmation_page.verify_basket_items_review()
        confirmation_page.verify_button_print_page()


@pytest.mark.regress
class TestAccountPageForRegisteredUser:
    def test_go_to_account_page(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_account_page()
        account_page = AccountPage(browser)
        account_page.open()

    def test_verify_name_page(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_account_page()
        account_page = AccountPage(browser)
        account_page.verify_page_name()

    def test_verify_menu_links(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_account_page()
        account_page = AccountPage(browser)
        account_page.verify_menu_profile_link()
        account_page.verify_menu_order_history()
        account_page.verify_menu_address_book()
        account_page.verify_menu_address_book()
        account_page.verify_menu_email_history()
        account_page.verify_menu_product_alerts()
        account_page.verify_menu_notifications()
        account_page.verify_menu_wish_lists()

    def test_verify_profile_form(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_account_page()
        account_page = AccountPage(browser)
        account_page.verify_profile_form()

    def test_verify_profile_buttons_under_form(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_account_page()
        account_page = AccountPage(browser)
        account_page.browser.execute_script("window.scrollBy(0, 100);")
        account_page.verify_change_pass_button()
        account_page.verify_edit_profile_button()
        account_page.verify_delete_profile_button()

    def test_change_passwords(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_account_page()
        account_page = AccountPage(browser)
        account_page.press_change_pass_button()
        change_password_page = ChangePasswordPage(browser)
        change_password_page.change_password_for_new()
        account_page = AccountPage(browser)
        account_page.alert_of_change_password()
        account_page.browser.execute_script("window.scrollBy(0, 100);")
        account_page.press_change_pass_button()
        change_password_page = ChangePasswordPage(browser)
        change_password_page.change_password_for_old()
        account_page = AccountPage(browser)
        account_page.alert_of_change_password()

    def test_edit_profile_name(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_account_page()
        account_page = AccountPage(browser)
        account_page.press_edit_profile_button()
        user_profile_edit_page = AccountProfileEditPage(browser)
        user_profile_edit_page.change_name_field()
        user_profile_edit_page.press_button_save()
        account_page = AccountPage(browser)
        account_page.alert_of_change_profile()

    def test_cancel_change_password(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_account_page()
        account_page = AccountPage(browser)
        account_page.press_change_pass_button()
        change_password_page = ChangePasswordPage(browser)
        change_password_page.press_button_cancel()
        account_page = AccountPage(browser)
        account_page.open()

    def test_cancel_edit_profile_name(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_account_page()
        account_page = AccountPage(browser)
        account_page.press_edit_profile_button()
        user_profile_edit_page = AccountProfileEditPage(browser)
        user_profile_edit_page.press_button_cancel()
        account_page = AccountPage(browser)
        account_page.open()

    def test_cancel_delete_profile(self, browser):
        page = MainPage(browser)
        page.open()
        page.user_in_system()
        page.go_to_account_page()
        account_page = AccountPage(browser)
        account_page.press_delete_profile_button()
        delete_profile_page = DeleteProfilePage(browser)
        delete_profile_page.cancel_delete_profile_link()
        account_page = AccountPage(browser)
        account_page.open()


